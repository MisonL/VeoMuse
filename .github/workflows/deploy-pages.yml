# GitHub Pages 部署工作流
name: Build and Deploy Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建和部署作业
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build documentation
        run: |
          # 创建构建目录
          mkdir -p docs/build
          echo "📁 创建构建目录..."
          
          # 检查文件是否存在
          if [ ! -f "README.md" ]; then
            echo "❌ README.md 文件不存在"
            exit 1
          fi
          
          if [ ! -f "docs/API_DOCUMENTATION.md" ]; then
            echo "❌ docs/API_DOCUMENTATION.md 文件不存在"
            exit 1
          fi
          
          # 复制文档文件
          echo "📋 复制README.md..."
          cp README.md docs/build/
          
          echo "📄 复制API文档..."
          cp docs/API_DOCUMENTATION.md docs/build/
          
          # 复制静态资源
          if [ -d "image" ]; then 
            echo "🖼️ 复制图片目录..."
            cp -r image docs/build/
          fi
          
          if [ -f "screenshot.png" ]; then 
            echo "📷 复制截图..."
            cp screenshot.png docs/build/
          fi
          
          echo "✅ 文档构建完成"
          ls -la docs/build/
          
      - name: Create index.html for GitHub Pages
        run: |
          cat > docs/build/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="zh-CN">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>VeoMuse - 文字/图片生成视频</title>
              <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
              <style>
                  .hero { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
              </style>
          </head>
          <body class="bg-gray-50">
              <div class="hero text-white py-20">
                  <div class="container mx-auto text-center">
                      <h1 class="text-5xl font-bold mb-4">VeoMuse</h1>
                      <p class="text-xl mb-8">使用Google Gemini Veo模型将文字或图片生成视频的Web应用程序</p>
                      <div class="flex justify-center space-x-4">
                          <a href="https://github.com/MisonL/VeoMuse" class="bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition">
                              📦 GitHub 仓库
                          </a>
                          <a href="README.html" class="border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-purple-600 transition">
                              📖 查看文档
                          </a>
                      </div>
                  </div>
              </div>
              
              <div class="container mx-auto py-12">
                  <div class="grid md:grid-cols-2 gap-8 mb-12">
                      <div class="bg-white p-6 rounded-lg shadow-lg">
                          <h3 class="text-2xl font-bold mb-4 text-gray-800">🎬 主要功能</h3>
                          <ul class="space-y-2 text-gray-600">
                              <li>📝 文字生成视频</li>
                              <li>🖼️ 图片生成视频</li>
                              <li>🚫 负面提示支持</li>
                              <li>🔑 多API密钥支持</li>
                              <li>▶️ 视频在线预览</li>
                              <li>🔄 视频转码功能</li>
                              <li>🎨 提示词模板库</li>
                              <li>📈 实时生成状态</li>
                          </ul>
                      </div>
                      
                      <div class="bg-white p-6 rounded-lg shadow-lg">
                          <h3 class="text-2xl font-bold mb-4 text-gray-800">⚡ 技术特性</h3>
                          <ul class="space-y-2 text-gray-600">
                              <li>🏗️ MVC模块化架构</li>
                              <li>🔒 企业级安全防护</li>
                              <li>📊 Winston日志系统</li>
                              <li>🔄 智能轮询机制</li>
                              <li>📦 批量视频生成</li>
                              <li>⚡ GPU加速支持</li>
                              <li>🐳 Docker容器化</li>
                              <li>🚀 GitHub Actions</li>
                          </ul>
                      </div>
                  </div>
                  
                  <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
                      <h2 class="text-3xl font-bold mb-6 text-gray-800">📚 项目文档</h2>
                      <div class="grid md:grid-cols-2 gap-6">
                          <a href="README.html" class="bg-white p-6 rounded-lg border-2 border-blue-200 hover:border-blue-400 transition">
                              <h3 class="text-xl font-semibold mb-2 text-blue-600">📖 项目说明</h3>
                              <p class="text-gray-600">详细的项目介绍、安装指南和使用说明</p>
                          </a>
                          <a href="API_DOCUMENTATION.html" class="bg-white p-6 rounded-lg border-2 border-green-200 hover:border-green-400 transition">
                              <h3 class="text-xl font-semibold mb-2 text-green-600">🔌 API文档</h3>
                              <p class="text-gray-600">完整的API接口文档和使用示例</p>
                          </a>
                      </div>
                  </div>
              </div>
              
              <footer class="bg-gray-800 text-white py-8">
                  <div class="container mx-auto text-center">
                      <p>&copy; 2025 VeoMuse v2.0.0 - 基于Google Gemini Veo模型的视频生成工具</p>
                      <p class="mt-2 text-gray-400">MIT License | MVC架构 | 企业级安全</p>
                  </div>
              </footer>
          </body>
          </html>
          EOF
          
      - name: Convert Markdown to HTML
        run: |
          # 安装marked并转换文档
          npm install -g marked
          # 生成HTML文档
          marked docs/build/README.md > docs/build/README.html
          marked docs/build/API_DOCUMENTATION.md > docs/build/API_DOCUMENTATION.html
          echo "文档生成完成"
          
      - name: Setup Pages (if enabled)
        id: pages
        uses: actions/configure-pages@v4
        continue-on-error: true
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/build'
        continue-on-error: true

      - name: Deploy to GitHub Pages (if configured)
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true
        
      - name: Summary
        run: |
          echo "✅ 构建完成！"
          echo "📦 测试通过：$(npm test > /dev/null 2>&1 && echo '是' || echo '否')"
          echo "📄 文档生成：docs/build/目录"
          echo "🌐 如需启用GitHub Pages，请在仓库设置中配置Pages功能"